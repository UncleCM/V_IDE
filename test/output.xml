<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1.1 (Python 3.13.0 on darwin)" generated="2025-01-03T00:43:33.205604" rpa="false" schemaversion="5">
<suite id="s1" name="Test" source="/Users/tanakrit/Documents/GitHub/V_IDE/test/test.robot">
<test id="s1-t1" name="Compare Teacher And Student Answers From Database" line="16">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2025-01-03T00:43:33.293717" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2025-01-03T00:43:33.293738" level="INFO">Configuration file doesn't exist</msg>
<msg time="2025-01-03T00:43:34.597182" level="INFO">Connect to DB using : psycopg2.connect(database='localhost:5432/school_db', user='postgres', password=***, port=5432)</msg>
<msg time="2025-01-03T00:43:34.603799" level="FAIL">OperationalError: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  role "postgres" does not exist
</msg>
<arg>${DB_TYPE}</arg>
<arg>${DB_HOST}:${DB_PORT}/${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="FAIL" start="2025-01-03T00:43:33.293541" elapsed="1.311491">OperationalError: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  role "postgres" does not exist
</status>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<var>${teacher_answer}</var>
<arg>${QUERY_TEACHER}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2025-01-03T00:43:34.605198" elapsed="0.000021"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<var>${student_output}</var>
<arg>${QUERY_STUDENT}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2025-01-03T00:43:34.605285" elapsed="0.000011"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${teacher_text}</var>
<arg>${teacher_answer}[0][0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-01-03T00:43:34.605404" elapsed="0.000027"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${student_text}</var>
<arg>${student_output}[0][0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-01-03T00:43:34.605551" elapsed="0.000023"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Teacher's Answer: ${teacher_text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-01-03T00:43:34.605703" elapsed="0.000024"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Student's Output: ${student_text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-01-03T00:43:34.605837" elapsed="0.000021"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${teacher_text}</arg>
<arg>${student_text}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-01-03T00:43:34.605967" elapsed="0.000024"/>
</kw>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="NOT RUN" start="2025-01-03T00:43:34.606101" elapsed="0.000022"/>
</kw>
<doc>Compare teacher's answer and student's output fetched from the database.</doc>
<status status="FAIL" start="2025-01-03T00:43:33.293018" elapsed="1.313332">OperationalError: connection to server on socket "/tmp/.s.PGSQL.5432" failed: FATAL:  role "postgres" does not exist
</status>
</test>
<status status="FAIL" start="2025-01-03T00:43:33.206090" elapsed="1.400693"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Test">Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
